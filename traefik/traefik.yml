# Production Traefik configuration for GrimWaves API
# This configuration uses Let's Encrypt with DNS Challenge via DuckDNS

# Logging configuration
log:
  level: INFO  # Production-level logging (less verbose)
  format: common
  filepath: /logs/traefik.log
  maxSize: 10
  maxAge: 3
  maxBackups: 7

# Access logs
accessLog:
  filepath: /logs/access.log
  bufferingSize: 100
  fields:
    defaultMode: keep

# Define entrypoints (ports)
entryPoints:
  web:
    address: ":80"
    # HTTP will redirect to HTTPS in middleware
  websecure:
    address: ":443"
    http:
      tls: {}
      middlewares:
        - secureHeaders@file
  dashboard:
    address: ":8081"

# Enable dashboard with secure settings
api:
  dashboard: true
  insecure: false  # Require authentication for dashboard

# Configure providers (where Traefik gets its dynamic configuration)
providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false  # Do not expose containers by default
    network: grimwaves-network  # Use the same network as the containers
    watch: true  # Watch for changes
  file:
    directory: "/etc/traefik/config"
    watch: true  # Watch for changes in config directory

# Let's Encrypt certificate resolver configuration
certificatesResolvers:
  duckdns:
    acme:
      email: denis@zwinger.pro
      storage: /etc/traefik/acme.json
      dnsChallenge:
        provider: duckdns
        delayBeforeCheck: 5

# Global HTTP to HTTPS redirect
http:
  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: true
    secureHeaders:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customFrameOptionsValue: "SAMEORIGIN"
