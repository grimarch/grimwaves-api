---
services:
  vault-agent:
    build:
      context: ./vault-agent
    container_name: vault-agent
    restart: unless-stopped
    environment:
      - VAULT_ADDR=${VAULT_ADDR:-https://vault-docker-lab1.vault-docker-lab.lan:8200}
      - VAULT_ROLE_ID
      - VAULT_WRAPPED_SECRET_ID
      - VAULT_SECRET_ID
      - VAULT_PROJECT_NAME=${VAULT_PROJECT_NAME:-learn-vault-lab}
      - VAULT_ROLE_NAME=${VAULT_PROJECT_NAME:-learn-vault-lab}-vault-agent
      - VAULT_SKIP_VERIFY=${VAULT_SKIP_VERIFY:-false}
    volumes:
      - ./vault-agent:/vault-agent
    networks:
      - grimwaves-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "vault-docker-lab1.vault-docker-lab.lan:${VAULT_SERVER_IP:-127.0.0.1}"
    healthcheck:
      test: ["CMD", "ls", "/vault-agent/token/vault-token"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s


  traefik:
    image: traefik:v3.3
    container_name: grimwaves-traefik
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "8080:8080"  # Traefik dashboard
    volumes:
      - ./traefik/logs:/etc/traefik/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - grimwaves-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://api:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grimwaves-api
    ports:
      - "8001:8000"
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs
      - ./vault-agent/sockets:/vault-agent/sockets
      - ./vault-agent/rendered:/vault-agent/rendered:ro
    environment:
      - VAULT_AGENT_SOCKET=/vault-agent/sockets/agent.sock
      # Variables for Uvicorn (can be overridden by .env or specific compose file)
      - API_PORT=${API_PORT:-8000}
      - API_WORKERS=${API_WORKERS:-1}
    networks:
      - grimwaves-network
    restart: unless-stopped
    depends_on:
      vault-agent:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  redis:
    image: redis:7.4.3-alpine
    container_name: grimwaves-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - grimwaves-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grimwaves-celery-worker
    command: celery -A grimwaves_api.core.celery_app worker --loglevel=info
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs
      - ./vault-agent/rendered:/vault-agent/rendered:ro
    environment:
      - SETTINGS_ENV_FILE=/vault-agent/rendered/.env
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/1}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    networks:
      - grimwaves-network
    restart: unless-stopped
    depends_on:
      vault-agent:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  grimwaves-network:
    name: grimwaves-network
    driver: bridge
    # ipam:
    #   driver: default
    #   config:
    #     - subnet: 172.21.0.0/16
    #       # gateway: 172.21.0.1 # Optional: uncomment to specify gateway

volumes:
  redis-data:
    name: grimwaves-redis-data